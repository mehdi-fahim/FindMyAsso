{% extends 'base.html.twig' %}

{% block title %}Carte Interactive - FindMyAsso{% endblock %}

{% block stylesheets %}
<style>
    #map {
        height: 600px;
        width: 100%;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
    
    .map-controls {
        background: white;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        margin-bottom: 1rem;
    }
    
    .map-legend {
        background: white;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        margin-bottom: 1rem;
    }
    
    .legend-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
    }
    
    .legend-color {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        margin-right: 0.5rem;
    }
    
    .cluster-info {
        background: white;
        padding: 0.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        font-size: 0.875rem;
    }
</style>
{% endblock %}

{% block body %}
<div class="bg-gray-50 min-h-screen">
    <!-- Header de la page -->
    <div class="bg-white shadow-sm border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="text-center">
                <h1 class="text-3xl font-bold text-gray-900 mb-4">
                    Carte Interactive
                </h1>
                <p class="text-lg text-gray-600 max-w-3xl mx-auto">
                    Découvrez les associations, refuges et familles d'accueil près de chez vous. 
                    Utilisez la carte pour localiser les structures de protection animale.
                </p>
            </div>
        </div>
    </div>

    <!-- Contrôles de la carte -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Filtres -->
            <div class="map-controls">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">
                    <i class="fas fa-filter mr-2 text-primary-500"></i>Filtres
                </h3>
                
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Type de structure</label>
                        <div class="space-y-2">
                            <label class="flex items-center">
                                <input type="checkbox" id="filter-associations" checked class="rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                                <span class="ml-2 text-sm text-gray-700">Associations & Refuges</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" id="filter-fosters" checked class="rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                                <span class="ml-2 text-sm text-gray-700">Familles d'accueil</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" id="filter-vets" checked class="rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                                <span class="ml-2 text-sm text-gray-700">Vétérinaires solidaires</span>
                            </label>
                        </div>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Région</label>
                        <select id="filter-region" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-primary-500 focus:border-primary-500">
                            <option value="">Toutes les régions</option>
                            <option value="Île-de-France">Île-de-France</option>
                            <option value="Auvergne-Rhône-Alpes">Auvergne-Rhône-Alpes</option>
                            <option value="Nouvelle-Aquitaine">Nouvelle-Aquitaine</option>
                            <option value="Occitanie">Occitanie</option>
                            <option value="Hauts-de-France">Hauts-de-France</option>
                            <option value="Grand Est">Grand Est</option>
                            <option value="Pays de la Loire">Pays de la Loire</option>
                            <option value="Bretagne">Bretagne</option>
                            <option value="Centre-Val de Loire">Centre-Val de Loire</option>
                            <option value="Bourgogne-Franche-Comté">Bourgogne-Franche-Comté</option>
                            <option value="Normandie">Normandie</option>
                            <option value="Provence-Alpes-Côte d'Azur">Provence-Alpes-Côte d'Azur</option>
                            <option value="Corse">Corse</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Rayon de recherche</label>
                        <div class="flex items-center space-x-2">
                            <input type="range" id="filter-radius" min="10" max="100" value="50" class="flex-1">
                            <span id="radius-value" class="text-sm text-gray-600 w-12">50 km</span>
                        </div>
                    </div>
                    
                    <button id="apply-filters" class="w-full bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md font-medium transition-colors">
                        <i class="fas fa-search mr-2"></i>Appliquer les filtres
                    </button>
                </div>
            </div>
            
            <!-- Légende -->
            <div class="map-legend">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">
                    <i class="fas fa-info-circle mr-2 text-primary-500"></i>Légende
                </h3>
                
                <div class="space-y-3">
                    <div class="legend-item">
                        <div class="legend-color bg-primary-500"></div>
                        <span class="text-sm text-gray-700">Associations & Refuges</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color bg-secondary-500"></div>
                        <span class="text-sm text-gray-700">Familles d'accueil</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color bg-green-500"></div>
                        <span class="text-sm text-gray-700">Vétérinaires solidaires</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color bg-yellow-500"></div>
                        <span class="text-sm text-gray-700">Clusters (plusieurs structures)</span>
                    </div>
                </div>
                
                <div class="mt-4 p-3 bg-gray-50 rounded-lg">
                    <p class="text-xs text-gray-600">
                        <i class="fas fa-lightbulb mr-1 text-yellow-500"></i>
                        Cliquez sur un marqueur pour voir les détails. Utilisez la molette pour zoomer.
                    </p>
                </div>
            </div>
            
            <!-- Statistiques -->
            <div class="map-controls">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">
                    <i class="fas fa-chart-bar mr-2 text-primary-500"></i>Statistiques
                </h3>
                
                <div class="space-y-3">
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-600">Associations :</span>
                        <span id="stats-associations" class="font-semibold text-primary-600">0</span>
                    </div>
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-600">Familles d'accueil :</span>
                        <span id="stats-fosters" class="font-semibold text-secondary-600">0</span>
                    </div>
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-600">Vétérinaires :</span>
                        <span id="stats-vets" class="font-semibold text-green-600">0</span>
                    </div>
                    <div class="border-t border-gray-200 pt-3">
                        <div class="flex justify-between items-center">
                            <span class="text-sm font-medium text-gray-700">Total :</span>
                            <span id="stats-total" class="font-bold text-gray-900">0</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Carte -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-8">
        <div id="map"></div>
    </div>

    <!-- Informations sur la sélection -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-8">
        <div id="selected-info" class="hidden bg-white rounded-lg shadow-md p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 id="selected-title" class="text-xl font-semibold text-gray-900"></h3>
                <button id="close-info" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>
            <div id="selected-content" class="text-gray-600"></div>
            <div id="selected-actions" class="mt-4 flex space-x-2"></div>
        </div>
    </div>
</div>

<script>
// Données des structures (seront remplacées par des appels API)
const mapData = {
    associations: [
        {
            id: 1,
            name: "SPA de Paris",
            type: "association",
            lat: 48.8566,
            lng: 2.3522,
            city: "Paris",
            region: "Île-de-France",
            description: "Refuge principal de la SPA à Paris",
            phone: "01 23 45 67 89",
            email: "contact@spa-paris.fr"
        },
        {
            id: 2,
            name: "Refuge des 4 Pattes",
            type: "association",
            lat: 43.2965,
            lng: 5.3698,
            city: "Marseille",
            region: "Provence-Alpes-Côte d'Azur",
            description: "Refuge pour chiens et chats abandonnés",
            phone: "04 91 23 45 67",
            email: "contact@4pattes.fr"
        }
    ],
    fosters: [
        {
            id: 1,
            name: "Famille Martin",
            type: "foster",
            lat: 48.8566,
            lng: 2.3522,
            city: "Paris",
            region: "Île-de-France",
            description: "Famille d'accueil pour chats et petits chiens",
            acceptedSpecies: "Chat, Petit chien",
            maxAnimals: 2
        }
    ],
    vets: [
        {
            id: 1,
            name: "Dr. Dupont",
            type: "vet",
            lat: 48.8566,
            lng: 2.3522,
            city: "Paris",
            region: "Île-de-France",
            description: "Clinique vétérinaire solidaire",
            clinicName: "Clinique du Bonheur",
            services: "Consultation, Vaccination, Stérilisation"
        }
    ]
};

let map;
let markers = [];
let clusters;

// Initialisation de la carte
document.addEventListener('DOMContentLoaded', function() {
    // Initialiser la carte centrée sur la France
    map = L.map('map').setView([46.603354, 1.888334], 6);
    
    // Ajouter la couche OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);
    
    // Initialiser les clusters
    clusters = L.markerClusterGroup({
        chunkedLoading: true,
        spiderfyOnMaxZoom: true,
        showCoverageOnHover: false,
        zoomToBoundsOnClick: true,
        iconCreateFunction: function(cluster) {
            const count = cluster.getChildCount();
            let className = 'marker-cluster-';
            let size = 'medium';
            
            if (count < 10) {
                size = 'small';
            } else if (count > 100) {
                size = 'large';
            }
            
            className += size;
            
            return L.divIcon({
                html: '<div><span>' + count + '</span></div>',
                className: className,
                iconSize: L.point(40, 40)
            });
        }
    });
    
    // Ajouter les clusters à la carte
    map.addLayer(clusters);
    
    // Charger les données initiales
    loadMapData();
    
    // Initialiser les événements
    initializeEvents();
    
    // Mettre à jour les statistiques
    updateStats();
});

// Charger les données sur la carte
function loadMapData() {
    // Nettoyer les marqueurs existants
    clearMarkers();
    
    // Ajouter les associations
    if (document.getElementById('filter-associations').checked) {
        mapData.associations.forEach(association => {
            if (shouldShowMarker(association)) {
                addMarker(association);
            }
        });
    }
    
    // Ajouter les familles d'accueil
    if (document.getElementById('filter-fosters').checked) {
        mapData.fosters.forEach(foster => {
            if (shouldShowMarker(foster)) {
                addMarker(foster);
            }
        });
    }
    
    // Ajouter les vétérinaires
    if (document.getElementById('filter-vets').checked) {
        mapData.vets.forEach(vet => {
            if (shouldShowMarker(vet)) {
                addMarker(vet);
            }
        });
    }
}

// Vérifier si un marqueur doit être affiché selon les filtres
function shouldShowMarker(item) {
    const regionFilter = document.getElementById('filter-region').value;
    if (regionFilter && item.region !== regionFilter) {
        return false;
    }
    return true;
}

// Ajouter un marqueur sur la carte
function addMarker(item) {
    let icon;
    let color;
    
    switch(item.type) {
        case 'association':
            color = '#0ea5e9'; // primary-500
            icon = L.divIcon({
                html: '<i class="fas fa-home" style="color: white; font-size: 16px;"></i>',
                className: 'custom-marker',
                iconSize: [30, 30],
                iconAnchor: [15, 15]
            });
            break;
        case 'foster':
            color = '#d946ef'; // secondary-500
            icon = L.divIcon({
                html: '<i class="fas fa-heart" style="color: white; font-size: 16px;"></i>',
                className: 'custom-marker',
                iconSize: [30, 30],
                iconAnchor: [15, 15]
            });
            break;
        case 'vet':
            color = '#22c55e'; // green-500
            icon = L.divIcon({
                html: '<i class="fas fa-user-md" style="color: white; font-size: 16px;"></i>',
                className: 'custom-marker',
                iconSize: [30, 30],
                iconAnchor: [15, 15]
            });
            break;
    }
    
    const marker = L.marker([item.lat, item.lng], { icon: icon })
        .bindPopup(createPopupContent(item))
        .on('click', () => showSelectedInfo(item));
    
    markers.push(marker);
    clusters.addLayer(marker);
}

// Créer le contenu du popup
function createPopupContent(item) {
    let content = `<div class="cluster-info">`;
    content += `<h4 class="font-semibold text-gray-900 mb-2">${item.name}</h4>`;
    content += `<p class="text-sm text-gray-600 mb-2">${item.description}</p>`;
    content += `<p class="text-sm text-gray-500"><i class="fas fa-map-marker-alt mr-1"></i>${item.city}, ${item.region}</p>`;
    
    if (item.phone) {
        content += `<p class="text-sm text-gray-500"><i class="fas fa-phone mr-1"></i>${item.phone}</p>`;
    }
    
    if (item.email) {
        content += `<p class="text-sm text-gray-500"><i class="fas fa-envelope mr-1"></i>${item.email}</p>`;
    }
    
    content += `</div>`;
    return content;
}

// Afficher les informations détaillées
function showSelectedInfo(item) {
    const infoDiv = document.getElementById('selected-info');
    const titleDiv = document.getElementById('selected-title');
    const contentDiv = document.getElementById('selected-content');
    const actionsDiv = document.getElementById('selected-actions');
    
    titleDiv.textContent = item.name;
    
    let content = `<div class="space-y-3">`;
    content += `<p class="text-gray-600">${item.description}</p>`;
    content += `<div class="flex items-center text-gray-500"><i class="fas fa-map-marker-alt mr-2"></i>${item.city}, ${item.region}</div>`;
    
    if (item.phone) {
        content += `<div class="flex items-center text-gray-500"><i class="fas fa-phone mr-2"></i>${item.phone}</div>`;
    }
    
    if (item.email) {
        content += `<div class="flex items-center text-gray-500"><i class="fas fa-envelope mr-2"></i>${item.email}</div>`;
    }
    
    if (item.type === 'foster' && item.acceptedSpecies) {
        content += `<div class="mt-3"><span class="text-sm font-medium text-gray-700">Espèces acceptées :</span> ${item.acceptedSpecies}</div>`;
    }
    
    if (item.type === 'vet' && item.services) {
        content += `<div class="mt-3"><span class="text-sm font-medium text-gray-700">Services :</span> ${item.services}</div>`;
    }
    
    content += `</div>`;
    
    contentDiv.innerHTML = content;
    
    // Actions selon le type
    let actions = '';
    switch(item.type) {
        case 'association':
            actions = `<a href="/associations/${item.id}" class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">Voir le profil</a>`;
            break;
        case 'foster':
            actions = `<a href="/fosters/${item.id}" class="bg-secondary-600 hover:bg-secondary-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">Contacter</a>`;
            break;
        case 'vet':
            actions = `<a href="/vets/${item.id}" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">Voir le profil</a>`;
            break;
    }
    
    actionsDiv.innerHTML = actions;
    infoDiv.classList.remove('hidden');
}

// Fermer les informations
function closeSelectedInfo() {
    document.getElementById('selected-info').classList.add('hidden');
}

// Nettoyer les marqueurs
function clearMarkers() {
    markers.forEach(marker => {
        clusters.removeLayer(marker);
    });
    markers = [];
}

// Mettre à jour les statistiques
function updateStats() {
    const associations = document.getElementById('filter-associations').checked ? mapData.associations.length : 0;
    const fosters = document.getElementById('filter-fosters').checked ? mapData.fosters.length : 0;
    const vets = document.getElementById('filter-vets').checked ? mapData.vets.length : 0;
    const total = associations + fosters + vets;
    
    document.getElementById('stats-associations').textContent = associations;
    document.getElementById('stats-fosters').textContent = fosters;
    document.getElementById('stats-vets').textContent = vets;
    document.getElementById('stats-total').textContent = total;
}

// Initialiser les événements
function initializeEvents() {
    // Filtres
    document.getElementById('apply-filters').addEventListener('click', function() {
        loadMapData();
        updateStats();
    });
    
    // Rayon de recherche
    const radiusSlider = document.getElementById('filter-radius');
    const radiusValue = document.getElementById('radius-value');
    
    radiusSlider.addEventListener('input', function() {
        radiusValue.textContent = this.value + ' km';
    });
    
    // Fermer les informations
    document.getElementById('close-info').addEventListener('click', closeSelectedInfo);
    
    // Filtres individuels
    ['filter-associations', 'filter-fosters', 'filter-vets'].forEach(id => {
        document.getElementById(id).addEventListener('change', function() {
            loadMapData();
            updateStats();
        });
    });
    
    // Filtre par région
    document.getElementById('filter-region').addEventListener('change', function() {
        loadMapData();
        updateStats();
    });
}
</script>

<style>
.custom-marker {
    background-color: #0ea5e9;
    border: 2px solid white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.marker-cluster-small {
    background-color: rgba(14, 165, 233, 0.6);
}

.marker-cluster-small > div {
    background-color: rgba(14, 165, 233, 0.8);
}

.marker-cluster-medium {
    background-color: rgba(14, 165, 233, 0.6);
}

.marker-cluster-medium > div {
    background-color: rgba(14, 165, 233, 0.8);
}

.marker-cluster-large {
    background-color: rgba(14, 165, 233, 0.6);
}

.marker-cluster-large > div {
    background-color: rgba(14, 165, 233, 0.8);
}

.marker-cluster-small > div,
.marker-cluster-medium > div,
.marker-cluster-large > div {
    width: 40px;
    height: 40px;
    margin-left: 0;
    margin-top: 0;
    text-align: center;
    border-radius: 50%;
    font-size: 14px;
    font-weight: bold;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
{% endblock %}
